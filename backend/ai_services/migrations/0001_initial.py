# Generated by Django 5.2.5 on 2025-10-02 10:12

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("organizations", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AIGenerationRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "generation_type",
                    models.CharField(
                        choices=[
                            ("poster", "Poster Generation"),
                            ("catalog", "Catalog Generation"),
                            ("background", "Background Generation"),
                            ("color_palette", "Color Palette Extraction"),
                            ("fabric_analysis", "Fabric Analysis"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("prompt", models.TextField()),
                ("negative_prompt", models.TextField(blank=True, null=True)),
                ("parameters", models.JSONField(blank=True, default=dict)),
                ("result_data", models.JSONField(blank=True, default=dict)),
                ("result_urls", models.JSONField(blank=True, default=list)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("processing_time", models.FloatField(blank=True, null=True)),
                (
                    "cost",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_requests",
                        to="organizations.organization",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AIGenerationHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "user_satisfaction_rating",
                    models.IntegerField(blank=True, null=True),
                ),
                ("user_feedback", models.TextField(blank=True)),
                ("regeneration_count", models.IntegerField(default=0)),
                ("final_selection", models.CharField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_history",
                        to="organizations.organization",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "request",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="history",
                        to="ai_services.aigenerationrequest",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AIProvider",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("nanobanana", "NanoBanana"),
                            ("openai", "OpenAI"),
                            ("stability", "Stability AI"),
                            ("midjourney", "Midjourney"),
                        ],
                        max_length=100,
                    ),
                ),
                ("api_key", models.CharField(blank=True, max_length=500, null=True)),
                ("api_url", models.URLField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("rate_limit_per_minute", models.IntegerField(default=60)),
                ("rate_limit_per_hour", models.IntegerField(default=1000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "unique_together": {("name",)},
            },
        ),
        migrations.AddField(
            model_name="aigenerationrequest",
            name="provider",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="ai_services.aiprovider"
            ),
        ),
        migrations.CreateModel(
            name="AITemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("textile", "Textile Design"),
                            ("poster", "Poster Design"),
                            ("catalog", "Catalog Layout"),
                            ("background", "Background Pattern"),
                            ("branding", "Branding Elements"),
                        ],
                        max_length=50,
                    ),
                ),
                ("prompt_template", models.TextField()),
                ("negative_prompt_template", models.TextField(blank=True)),
                ("default_parameters", models.JSONField(blank=True, default=dict)),
                ("usage_count", models.IntegerField(default=0)),
                ("is_public", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_templates",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "ordering": ["-usage_count", "name"],
            },
        ),
        migrations.CreateModel(
            name="AIUsageQuota",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "generation_type",
                    models.CharField(
                        choices=[
                            ("poster", "Poster Generation"),
                            ("catalog", "Catalog Generation"),
                            ("background", "Background Generation"),
                            ("color_palette", "Color Palette Extraction"),
                            ("fabric_analysis", "Fabric Analysis"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "quota_type",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("daily", "Daily"),
                            ("hourly", "Hourly"),
                        ],
                        max_length=20,
                    ),
                ),
                ("max_requests", models.IntegerField(default=100)),
                (
                    "max_cost",
                    models.DecimalField(decimal_places=2, default=10.0, max_digits=10),
                ),
                ("current_requests", models.IntegerField(default=0)),
                (
                    "current_cost",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("reset_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_quotas",
                        to="organizations.organization",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_services.aiprovider",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="aigenerationrequest",
            index=models.Index(
                fields=["organization", "status"], name="ai_services_organiz_151a3f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aigenerationrequest",
            index=models.Index(
                fields=["user", "generation_type"],
                name="ai_services_user_id_97a7f7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="aigenerationrequest",
            index=models.Index(
                fields=["created_at"], name="ai_services_created_c61fd1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aitemplate",
            index=models.Index(
                fields=["organization", "category"],
                name="ai_services_organiz_e623c4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="aitemplate",
            index=models.Index(
                fields=["is_public", "is_active"], name="ai_services_is_publ_e08126_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aiusagequota",
            index=models.Index(
                fields=["organization", "quota_type"],
                name="ai_services_organiz_968e43_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="aiusagequota",
            index=models.Index(
                fields=["reset_at"], name="ai_services_reset_a_1278c1_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="aiusagequota",
            unique_together={
                ("organization", "provider", "generation_type", "quota_type")
            },
        ),
    ]
